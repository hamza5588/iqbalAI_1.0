2025-08-30 11:19:29,427 INFO: Versions data: [{'id': 88, 'teacher_id': 12, 'title': 'agentic ai', 'summary': 'This lesson covers the components of LangChain, a retrieval-augmented generation (RAG) framework for agentic AI, including data loading, text splitting, metadata attachment, embeddings, vector store index, retriever, query transformation, prompt template, LLM reasoning, and output parsing.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': "LangChain is a retrieval-augmented generation (RAG) framework that enables agentic AI. It consists of 10 components that work together to generate human-like responses. In this lesson, we will explore each component in detail.\n\nThe LangChain RAG framework consists of the following components: Data Loader, Text Splitter, Metadata Attachment, Embeddings, Vector Store Index, Retriever, Query Transformation, Prompt Template, LLM Reasoning and Answer Generation, and Output Parser. Each component plays a crucial role in generating accurate and relevant responses.\n\nIn conclusion, LangChain's RAG framework is a powerful tool for enabling agentic AI. By understanding each component and how they work together, we can build more sophisticated AI systems that can interact with humans in a more natural way.", 'file_name': 'LangChain and RAG Components.pdf', 'created_at': '2025-08-13 19:34:24', 'updated_at': '2025-08-13 19:34:42', 'is_public': 1, 'parent_lesson_id': None, 'version': 1, 'teacher_name': 'hamza5588', 'is_original': True}, {'id': 89, 'teacher_id': 12, 'title': 'agentic ai', 'summary': 'This lesson covers the components of LangChain, a retrieval-augmented generation (RAG) framework for agentic AI, including data loading, text splitting, metadata attachment, embeddings, vector store index, retriever, query transformation, prompt template, LLM reasoning, and output parsing.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': "# LangChain: A Retrieval-Augmented Generation (RAG) Framework\n## Overview\nLangChain is a retrieval-augmented generation (RAG) framework that enables agentic AI. It consists of 10 components that work together to generate human-like responses.\n\n## Lesson Objectives\nIn this lesson, we will explore each component in detail.\n\n# The LangChain RAG Framework\n## Components\n### 1. Data Loader\n### 2. Text Splitter\n### 3. Metadata Attachment\n### 4. Embeddings\n### 5. Vector Store Index\n### 6. Retriever\n### 7. Query Transformation\n### 8. Prompt Template\n### 9. LLM Reasoning and Answer Generation\n### 10. Output Parser\n## Role of Each Component\nEach component plays a crucial role in generating accurate and relevant responses.\n\n# In Conclusion\n## LangChain's RAG Framework: A Powerful Tool for Enabling Agentic AI\n### Understanding Each Component and How They Work Together\n#### Building More Sophisticated AI Systems that Interact with Humans in a More Natural Way", 'file_name': None, 'created_at': '2025-08-20 20:28:03', 'updated_at': '2025-08-20 20:28:03', 'is_public': 1, 'parent_lesson_id': 88, 'version': 2, 'teacher_name': 'hamza5588', 'is_original': False}, {'id': 90, 'teacher_id': 12, 'title': 'agentic ai', 'summary': 'This lesson covers the components of LangChain, a retrieval-augmented generation (RAG) framework for agentic AI, including data loading, text splitting, metadata attachment, embeddings, vector store index, retriever, query transformation, prompt template, LLM reasoning, and output parsing.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': "Here is the revised lesson chunk in markdown with subheadings:\n\nLangChain: A Retrieval-Augmented Generation (RAG) Framework\n============================================================\n\n### Overview\n\nLangChain is a retrieval-augmented generation (RAG) framework that enables agentic AI. It consists of 10 components that work together to generate human-like responses.\n\n### Lesson Objectives\n\n#### In this lesson, we will explore each component in detail.\n\n### The LangChain RAG Framework\n\n#### Components\n\n##### 1. Data Loader\n##### 2. Text Splitter\n##### 3. Metadata Attachment\n##### 4. Embeddings\n##### 5. Vector Store Index\n##### 6. Retriever\n##### 7. Query Transformation\n##### 8. Prompt Template\n##### 9. LLM Reasoning and Answer Generation\n##### 10. Output Parser\n\n### Role of Each Component\n\n#### Each component plays a crucial role in generating accurate and relevant responses.\n\n### In Conclusion\n\n#### LangChain's RAG Framework: A Powerful Tool for Enabling Agentic AI\n#### Understanding Each Component and How They Work Together\n#### Building More Sophisticated AI Systems that Interact with Humans in a More Natural Way", 'file_name': None, 'created_at': '2025-08-30 06:11:31', 'updated_at': '2025-08-30 06:11:31', 'is_public': 1, 'parent_lesson_id': 88, 'version': 3, 'teacher_name': 'hamza5588', 'is_original': False}, {'id': 91, 'teacher_id': 12, 'title': 'agentic ai', 'summary': 'This lesson covers the components of LangChain, a retrieval-augmented generation (RAG) framework for agentic AI, including data loading, text splitting, metadata attachment, embeddings, vector store index, retriever, query transformation, prompt template, LLM reasoning, and output parsing.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': "Here is the revised lesson chunk in markdown with the added LangChain diagram:\nLangChain: A Retrieval-Augmented Generation (RAG) Framework\nOverview\nLangChain is a retrieval-augmented generation (RAG) framework that enables agentic AI. It consists of 10 components that work together to generate human-like responses.\nLesson Objectives\nIn this lesson, we will explore each component in detail.\nThe LangChain RAG Framework\nComponents\n1. Data Loader\n2. Text Splitter\n3. Metadata Attachment\n4. Embeddings\n5. Vector Store Index\n6. Retriever\n7. Query Transformation\n8. Prompt Template\n9. LLM Reasoning and Answer Generation\n10. Output Parser\nLangChain Diagram\n```\n                                      +---------------+\n                                      |  Data Loader  |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      |  Text Splitter  |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      | Metadata Attachment |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      |    Embeddings   |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      | Vector Store Index |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      |     Retriever    |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      | Query Transformation |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      |   Prompt Template  |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      | LLM Reasoning and  |\n                                      | Answer Generation  |\n                                      +---------------+\n                                             |\n                                             |\n                                             v\n                                      +---------------+\n                                      |    Output Parser  |\n                                      +---------------+\n```\nRole of Each Component\nEach component plays a crucial role in generating accurate and relevant responses.\nIn Conclusion\nLangChain's RAG Framework: A Powerful Tool for Enabling Agentic AI\nUnderstanding Each Component and How They Work Together\nBuilding More Sophisticated AI Systems that Interact with Humans in a More Natural Way", 'file_name': None, 'created_at': '2025-08-30 06:19:26', 'updated_at': '2025-08-30 06:19:26', 'is_public': 1, 'parent_lesson_id': 88, 'version': 4, 'teacher_name': 'hamza5588', 'is_original': False}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:377]
2025-08-30 11:19:38,812 INFO: Retrieved lesson ID 88 with title: 'agentic ai' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:196]
2025-08-30 11:19:38,814 INFO: get_lesson_versions for lesson 88: found 4 versions [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:376]
