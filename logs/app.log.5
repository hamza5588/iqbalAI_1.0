2025-08-01 02:27:01,482 INFO: Versions: [{'id': 39, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': 'The Agentic RAG System is an intelligent document processing and question-answering platform that combines the power of Large Language Models (LLMs) with vector databases to provide contextual, source-referenced responses from PDF documents.\n\nThe system consists of several components, including the LangGraph Workflow Engine, AI Models, Vector Database, and Memory System. It supports features such as intelligent intent detection, self-correcting queries, autonomous workflow routing, and context-aware responses.\n\nThe LangGraph Workflow Engine orchestrates the entire workflow using a state-based graph. The AI Models include Groq Llama3-70B and Nomic Embeddings. The Vector Database is ChromaDB, which provides persistent vector storage and metadata filtering capabilities.\n\nThe workflow process consists of three phases: document ingestion, query processing, and response generation. The system supports various query types, including rewrite, summarize, and answer queries.\n\nThe system provides features such as query enhancement, document summarization, precise question answering, conversational interface, and advanced search. It also supports setup and installation, with configuration options and usage guides.\n\nThe system uses a TypedDict to maintain state across workflow steps. It also supports vector search implementation, memory management, and API reference.\n\nCommon issues and solutions are provided, including import errors, API key issues, ChromaDB issues, PDF processing issues, and memory issues. Performance optimization tips and debugging techniques are also discussed.\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction that goes beyond simple search and retrieval. It delivers contextual, source-referenced responses while handling the complexities of natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:10:56', 'updated_at': '2025-07-31 21:10:56', 'is_public': 1, 'parent_lesson_id': None, 'version': 1, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:185]
2025-08-01 02:27:11,646 INFO: Retrieved lesson ID 39 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:27:14,284 INFO: Successfully improved lesson 39 content [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\services\lesson_service.py:1179]
2025-08-01 02:27:14,284 INFO: Creating new version of lesson 39 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:348]
2025-08-01 02:27:14,285 INFO: Saving lesson to database with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:147]
2025-08-01 02:27:14,285 INFO: Creating new version for parent lesson 39, assigned version 2 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:163]
2025-08-01 02:27:14,286 INFO: Max version found: 1 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:164]
2025-08-01 02:27:17,492 INFO: Retrieved lesson ID 44 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:27:17,494 INFO: get_lesson_versions for lesson 44: found 1 versions [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:381]
2025-08-01 02:27:17,495 INFO: Versions data: [{'id': 44, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**What is the Agentic RAG System?**\n\nThe Agentic RAG System is an intelligent document processing and question-answering platform that combines the power of Large Language Models (LLMs) with vector databases to provide contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of several components, including the LangGraph Workflow Engine, AI Models, Vector Database, and Memory System. It supports features such as intelligent intent detection, self-correcting queries, autonomous workflow routing, and context-aware responses.\n\n**System Architecture**\n\nThe LangGraph Workflow Engine orchestrates the entire workflow using a state-based graph. The AI Models include Groq Llama3-70B and Nomic Embeddings. The Vector Database is ChromaDB, which provides persistent vector storage and metadata filtering capabilities.\n\n**Workflow Process**\n\nThe workflow process consists of three phases: document ingestion, query processing, and response generation. The system supports various query types, including rewrite, summarize, and answer queries.\n\n**System Features**\n\nThe system provides features such as query enhancement, document summarization, precise question answering, conversational interface, and advanced search. It also supports setup and installation, with configuration options and usage guides.\n\n**System Implementation**\n\nThe system uses a TypedDict to maintain state across workflow steps. It also supports vector search implementation, memory management, and API reference.\n\n**Troubleshooting**\n\nCommon issues and solutions are provided, including import errors, API key issues, ChromaDB issues, PDF processing issues, and memory issues. Performance optimization tips and debugging techniques are also discussed.\n\n**System Benefits**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction that goes beyond simple search and retrieval. It delivers contextual, source-referenced responses while handling the complexities of natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:27:14', 'updated_at': '2025-07-31 21:27:14', 'is_public': 1, 'parent_lesson_id': 39, 'version': 2, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:382]
2025-08-01 02:27:17,501 INFO: Retrieved 1 versions for lesson 44 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:184]
2025-08-01 02:27:17,502 INFO: Versions: [{'id': 44, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**What is the Agentic RAG System?**\n\nThe Agentic RAG System is an intelligent document processing and question-answering platform that combines the power of Large Language Models (LLMs) with vector databases to provide contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of several components, including the LangGraph Workflow Engine, AI Models, Vector Database, and Memory System. It supports features such as intelligent intent detection, self-correcting queries, autonomous workflow routing, and context-aware responses.\n\n**System Architecture**\n\nThe LangGraph Workflow Engine orchestrates the entire workflow using a state-based graph. The AI Models include Groq Llama3-70B and Nomic Embeddings. The Vector Database is ChromaDB, which provides persistent vector storage and metadata filtering capabilities.\n\n**Workflow Process**\n\nThe workflow process consists of three phases: document ingestion, query processing, and response generation. The system supports various query types, including rewrite, summarize, and answer queries.\n\n**System Features**\n\nThe system provides features such as query enhancement, document summarization, precise question answering, conversational interface, and advanced search. It also supports setup and installation, with configuration options and usage guides.\n\n**System Implementation**\n\nThe system uses a TypedDict to maintain state across workflow steps. It also supports vector search implementation, memory management, and API reference.\n\n**Troubleshooting**\n\nCommon issues and solutions are provided, including import errors, API key issues, ChromaDB issues, PDF processing issues, and memory issues. Performance optimization tips and debugging techniques are also discussed.\n\n**System Benefits**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction that goes beyond simple search and retrieval. It delivers contextual, source-referenced responses while handling the complexities of natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:27:14', 'updated_at': '2025-07-31 21:27:14', 'is_public': 1, 'parent_lesson_id': 39, 'version': 2, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:185]
2025-08-01 02:27:28,742 INFO: Retrieved lesson ID 39 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:27:28,743 INFO: get_lesson_versions for lesson 39: found 2 versions [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:381]
