2025-08-01 02:23:28,760 INFO: Versions: [{'id': 42, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**Introduction to the Agentic RAG System**\n\nThe Agentic RAG System is a document processing and question-answering platform that combines Large Language Models (LLMs) with vector databases for contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of:\n\n* **LangGraph Workflow Engine**: Orchestrates the workflow\n* **AI Models**: Groq Llama3-70B and Nomic Embeddings\n* **Vector Database**: ChromaDB for persistent vector storage and metadata filtering\n* **Memory System**: Supports vector search and memory management\n\n**Features and Capabilities**\n\nThe Agentic RAG System supports:\n\n* **Intelligent Intent Detection**\n* **Self-Correcting Queries**\n* **Autonomous Workflow Routing**\n* **Context-Aware Responses**\n* **Query Enhancement**\n* **Document Summarization**\n* **Precise Question Answering**\n* **Conversational Interface**\n* **Advanced Search**\n\n**Workflow Process**\n\nThe workflow process consists of three phases:\n\n* **Document Ingestion**\n* **Query Processing**\n* **Response Generation**\n\nThe system supports various query types, including:\n\n* **Rewrite**\n* **Summarize**\n* **Answer**\n\n**Setup and Installation**\n\nThe system provides setup and installation options with configuration guides.\n\n**Common Issues and Solutions**\n\nCommon issues and solutions include:\n\n* **Import Errors**\n* **API Key Issues**\n* **ChromaDB Issues**\n* **PDF Processing Issues**\n* **Memory Issues**\n\n**Performance Optimization and Debugging**\n\nPerformance optimization tips and debugging techniques are discussed.\n\n**Conclusion**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction, delivering contextual, source-referenced responses while handling natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:23:08', 'updated_at': '2025-07-31 21:23:08', 'is_public': 1, 'parent_lesson_id': 41, 'version': 3, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:185]
2025-08-01 02:23:37,404 INFO: Retrieved lesson ID 42 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:23:37,406 INFO: get_lesson_versions for lesson 42: found 1 versions [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:361]
2025-08-01 02:23:37,408 INFO: Versions data: [{'id': 42, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**Introduction to the Agentic RAG System**\n\nThe Agentic RAG System is a document processing and question-answering platform that combines Large Language Models (LLMs) with vector databases for contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of:\n\n* **LangGraph Workflow Engine**: Orchestrates the workflow\n* **AI Models**: Groq Llama3-70B and Nomic Embeddings\n* **Vector Database**: ChromaDB for persistent vector storage and metadata filtering\n* **Memory System**: Supports vector search and memory management\n\n**Features and Capabilities**\n\nThe Agentic RAG System supports:\n\n* **Intelligent Intent Detection**\n* **Self-Correcting Queries**\n* **Autonomous Workflow Routing**\n* **Context-Aware Responses**\n* **Query Enhancement**\n* **Document Summarization**\n* **Precise Question Answering**\n* **Conversational Interface**\n* **Advanced Search**\n\n**Workflow Process**\n\nThe workflow process consists of three phases:\n\n* **Document Ingestion**\n* **Query Processing**\n* **Response Generation**\n\nThe system supports various query types, including:\n\n* **Rewrite**\n* **Summarize**\n* **Answer**\n\n**Setup and Installation**\n\nThe system provides setup and installation options with configuration guides.\n\n**Common Issues and Solutions**\n\nCommon issues and solutions include:\n\n* **Import Errors**\n* **API Key Issues**\n* **ChromaDB Issues**\n* **PDF Processing Issues**\n* **Memory Issues**\n\n**Performance Optimization and Debugging**\n\nPerformance optimization tips and debugging techniques are discussed.\n\n**Conclusion**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction, delivering contextual, source-referenced responses while handling natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:23:08', 'updated_at': '2025-07-31 21:23:08', 'is_public': 1, 'parent_lesson_id': 41, 'version': 3, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:362]
2025-08-01 02:23:37,415 INFO: Retrieved 1 versions for lesson 42 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:184]
2025-08-01 02:23:37,417 INFO: Versions: [{'id': 42, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**Introduction to the Agentic RAG System**\n\nThe Agentic RAG System is a document processing and question-answering platform that combines Large Language Models (LLMs) with vector databases for contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of:\n\n* **LangGraph Workflow Engine**: Orchestrates the workflow\n* **AI Models**: Groq Llama3-70B and Nomic Embeddings\n* **Vector Database**: ChromaDB for persistent vector storage and metadata filtering\n* **Memory System**: Supports vector search and memory management\n\n**Features and Capabilities**\n\nThe Agentic RAG System supports:\n\n* **Intelligent Intent Detection**\n* **Self-Correcting Queries**\n* **Autonomous Workflow Routing**\n* **Context-Aware Responses**\n* **Query Enhancement**\n* **Document Summarization**\n* **Precise Question Answering**\n* **Conversational Interface**\n* **Advanced Search**\n\n**Workflow Process**\n\nThe workflow process consists of three phases:\n\n* **Document Ingestion**\n* **Query Processing**\n* **Response Generation**\n\nThe system supports various query types, including:\n\n* **Rewrite**\n* **Summarize**\n* **Answer**\n\n**Setup and Installation**\n\nThe system provides setup and installation options with configuration guides.\n\n**Common Issues and Solutions**\n\nCommon issues and solutions include:\n\n* **Import Errors**\n* **API Key Issues**\n* **ChromaDB Issues**\n* **PDF Processing Issues**\n* **Memory Issues**\n\n**Performance Optimization and Debugging**\n\nPerformance optimization tips and debugging techniques are discussed.\n\n**Conclusion**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction, delivering contextual, source-referenced responses while handling natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:23:08', 'updated_at': '2025-07-31 21:23:08', 'is_public': 1, 'parent_lesson_id': 41, 'version': 3, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:185]
2025-08-01 02:23:45,905 INFO: Retrieved lesson ID 42 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:23:48,810 INFO: Successfully improved lesson 42 content [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\services\lesson_service.py:1179]
2025-08-01 02:23:48,810 INFO: Creating new version of lesson 42 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:328]
2025-08-01 02:23:48,811 INFO: Saving lesson to database with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:147]
2025-08-01 02:23:48,812 INFO: Creating new version for parent lesson 42, assigned version 4 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:163]
2025-08-01 02:23:48,813 INFO: Max version found: 3 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:164]
2025-08-01 02:23:51,277 INFO: Retrieved lesson ID 43 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:23:51,279 INFO: get_lesson_versions for lesson 43: found 1 versions [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:361]
