2025-08-01 02:24:02,507 INFO: Versions: [{'id': 41, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**Introduction to the Agentic RAG System**\n\nThe Agentic RAG System is an intelligent document processing and question-answering platform that combines the power of Large Language Models (LLMs) with vector databases to provide contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of several components, including:\n\n* **LangGraph Workflow Engine**: Orchestrates the entire workflow using a state-based graph\n* **AI Models**: Include Groq Llama3-70B and Nomic Embeddings\n* **Vector Database**: ChromaDB, which provides persistent vector storage and metadata filtering capabilities\n* **Memory System**: Supports vector search implementation, memory management, and API reference\n\n**Features and Capabilities**\n\nThe Agentic RAG System supports features such as:\n\n* **Intelligent Intent Detection**\n* **Self-Correcting Queries**\n* **Autonomous Workflow Routing**\n* **Context-Aware Responses**\n* **Query Enhancement**\n* **Document Summarization**\n* **Precise Question Answering**\n* **Conversational Interface**\n* **Advanced Search**\n\n**Workflow Process**\n\nThe workflow process consists of three phases:\n\n* **Document Ingestion**\n* **Query Processing**\n* **Response Generation**\n\nThe system supports various query types, including:\n\n* **Rewrite Queries**\n* **Summarize Queries**\n* **Answer Queries**\n\n**Setup and Installation**\n\nThe system provides setup and installation options, with configuration options and usage guides.\n\n**Common Issues and Solutions**\n\nCommon issues and solutions are provided, including:\n\n* **Import Errors**\n* **API Key Issues**\n* **ChromaDB Issues**\n* **PDF Processing Issues**\n* **Memory Issues**\n\n**Performance Optimization and Debugging**\n\nPerformance optimization tips and debugging techniques are also discussed.\n\n**Conclusion**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction that goes beyond simple search and retrieval. It delivers contextual, source-referenced responses while handling the complexities of natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:11:51', 'updated_at': '2025-07-31 21:11:51', 'is_public': 1, 'parent_lesson_id': 39, 'version': 2, 'teacher_name': 'hamza5588'}, {'id': 42, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': '**Introduction to the Agentic RAG System**\n\nThe Agentic RAG System is a document processing and question-answering platform that combines Large Language Models (LLMs) with vector databases for contextual, source-referenced responses from PDF documents.\n\n**System Components**\n\nThe system consists of:\n\n* **LangGraph Workflow Engine**: Orchestrates the workflow\n* **AI Models**: Groq Llama3-70B and Nomic Embeddings\n* **Vector Database**: ChromaDB for persistent vector storage and metadata filtering\n* **Memory System**: Supports vector search and memory management\n\n**Features and Capabilities**\n\nThe Agentic RAG System supports:\n\n* **Intelligent Intent Detection**\n* **Self-Correcting Queries**\n* **Autonomous Workflow Routing**\n* **Context-Aware Responses**\n* **Query Enhancement**\n* **Document Summarization**\n* **Precise Question Answering**\n* **Conversational Interface**\n* **Advanced Search**\n\n**Workflow Process**\n\nThe workflow process consists of three phases:\n\n* **Document Ingestion**\n* **Query Processing**\n* **Response Generation**\n\nThe system supports various query types, including:\n\n* **Rewrite**\n* **Summarize**\n* **Answer**\n\n**Setup and Installation**\n\nThe system provides setup and installation options with configuration guides.\n\n**Common Issues and Solutions**\n\nCommon issues and solutions include:\n\n* **Import Errors**\n* **API Key Issues**\n* **ChromaDB Issues**\n* **PDF Processing Issues**\n* **Memory Issues**\n\n**Performance Optimization and Debugging**\n\nPerformance optimization tips and debugging techniques are discussed.\n\n**Conclusion**\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction, delivering contextual, source-referenced responses while handling natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:23:08', 'updated_at': '2025-07-31 21:23:08', 'is_public': 1, 'parent_lesson_id': 41, 'version': 3, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:185]
2025-08-01 02:26:43,605 INFO: Checking survey submission status for user_id: 12 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:1301]
2025-08-01 02:26:43,606 INFO: Survey check result: User 12 has not submitted a survey (count: 0) [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:1310]
2025-08-01 02:26:54,362 INFO: Retrieved lesson ID 43 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:26:56,874 INFO: Retrieved lesson ID 42 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:26:59,683 INFO: Retrieved lesson ID 41 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:27:01,476 INFO: Retrieved lesson ID 39 with title: 'Agentic RAG System Documentation' [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:192]
2025-08-01 02:27:01,477 INFO: get_lesson_versions for lesson 39: found 1 versions [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:381]
2025-08-01 02:27:01,478 INFO: Versions data: [{'id': 39, 'teacher_id': 12, 'title': 'Agentic RAG System Documentation', 'summary': 'This lesson covers the Agentic RAG System, a document processing and question-answering platform that combines large language models with vector databases to provide contextual, source-referenced responses from PDF documents.', 'learning_objectives': 'ai', 'focus_area': 'Other', 'grade_level': 'College', 'content': 'The Agentic RAG System is an intelligent document processing and question-answering platform that combines the power of Large Language Models (LLMs) with vector databases to provide contextual, source-referenced responses from PDF documents.\n\nThe system consists of several components, including the LangGraph Workflow Engine, AI Models, Vector Database, and Memory System. It supports features such as intelligent intent detection, self-correcting queries, autonomous workflow routing, and context-aware responses.\n\nThe LangGraph Workflow Engine orchestrates the entire workflow using a state-based graph. The AI Models include Groq Llama3-70B and Nomic Embeddings. The Vector Database is ChromaDB, which provides persistent vector storage and metadata filtering capabilities.\n\nThe workflow process consists of three phases: document ingestion, query processing, and response generation. The system supports various query types, including rewrite, summarize, and answer queries.\n\nThe system provides features such as query enhancement, document summarization, precise question answering, conversational interface, and advanced search. It also supports setup and installation, with configuration options and usage guides.\n\nThe system uses a TypedDict to maintain state across workflow steps. It also supports vector search implementation, memory management, and API reference.\n\nCommon issues and solutions are provided, including import errors, API key issues, ChromaDB issues, PDF processing issues, and memory issues. Performance optimization tips and debugging techniques are also discussed.\n\nThe Agentic RAG System provides a powerful, intelligent interface for document interaction that goes beyond simple search and retrieval. It delivers contextual, source-referenced responses while handling the complexities of natural language queries gracefully.', 'file_name': 'Agentic RAG System Documentation.pdf', 'created_at': '2025-07-31 21:10:56', 'updated_at': '2025-07-31 21:10:56', 'is_public': 1, 'parent_lesson_id': None, 'version': 1, 'teacher_name': 'hamza5588'}] [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\models\models.py:382]
2025-08-01 02:27:01,481 INFO: Retrieved 1 versions for lesson 39 [in C:\Users\DCS\Desktop\New folder (10)\iqbalAI_1.0\app\routes\lesson_routes.py:184]
