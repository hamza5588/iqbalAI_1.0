# version: '3.8'

# services:
#   nginx:
#     build:
#       context: .
#       dockerfile: Dockerfile.nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./static:/app/static
#       - /etc/nginx/ssl:/etc/nginx/ssl:ro
#       # - ./nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       flask_app1:
#         condition: service_healthy
#       flask_app2:
#         condition: service_healthy
#       flask_app3:
#         condition: service_healthy
#       flask_app4:
#         condition: service_healthy
#     networks:
#       - app_network

#   flask_app1:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=507995986306-qcdrhrrt3d71la4pkrf7lt1b2tvuusqm.apps.googleusercontent.com
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - .:/app
#       - /app/__pycache__
#       - /app/.pytest_cache
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

#   flask_app2:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=your-google-client-id
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - .:/app
#       - /app/__pycache__
#       - /app/.pytest_cache
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

#   flask_app3:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=your-google-client-id
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - .:/app
#       - /app/__pycache__
#       - /app/.pytest_cache
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

#   flask_app4:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=your-google-client-id
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - .:/app
#       - /app/__pycache__
#       - /app/.pytest_cache
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

# networks:
#   app_network:
#     driver: bridge 




# version: '3.8'

# services:
#   nginx:
#     build:
#       context: .
#       dockerfile: Dockerfile.nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./static:/app/static
#       - ./nginx.conf:/etc/nginx/nginx.conf
#       - /etc/nginx/ssl:/etc/nginx/ssl:ro
#     depends_on:
#       flask_app1:
#         condition: service_healthy
#       flask_app2:
#         condition: service_healthy
#       flask_app3:
#         condition: service_healthy
#       flask_app4:
#         condition: service_healthy
#     networks:
#       - app_network

#   flask_app1:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     expose:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - DOCKER_ENV=true
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=507995986306-qcdrhrrt3d71la4pkrf7lt1b2tvuusqm.apps.googleusercontent.com
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - ./app:/app/app 
#       - ./instance:/app/instance
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

#   flask_app2:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     expose:
#       - "5000"
#     environment:
#      - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - DOCKER_ENV=true
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=507995986306-qcdrhrrt3d71la4pkrf7lt1b2tvuusqm.apps.googleusercontent.com
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - ./app:/app/app 
#       - ./instance:/app/instance
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

#   flask_app3:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     expose:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - DOCKER_ENV=true
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=507995986306-qcdrhrrt3d71la4pkrf7lt1b2tvuusqm.apps.googleusercontent.com
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - ./app:/app/app 
#       - ./instance:/app/instance
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

#   flask_app4:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     expose:
#       - "5000"
#     environment:
#       - FLASK_APP=run.py
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#       - DOCKER_ENV=true
#       - PYTHONUNBUFFERED=1
#       - PYTHONPATH=/app
#       - GOOGLE_CLIENT_ID=507995986306-qcdrhrrt3d71la4pkrf7lt1b2tvuusqm.apps.googleusercontent.com
#       - GROQ_CLIENT_ID=your-groq-client-id
#       - GROQ_CLIENT_SECRET=your-groq-client-secret
#     volumes:
#       - ./app:/app/app 
#       - ./instance:/app/instance
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     networks:
#       - app_network

# networks:
#   app_network:
#     driver: bridge















services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./static:/app/static
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      flask_app1:
        condition: service_healthy
      flask_app2:
        condition: service_healthy
      flask_app3:
        condition: service_healthy
      flask_app4:
        condition: service_healthy
    networks:
      - app_network

  flask_app1:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - OPENBLAS_NUM_THREADS=1
      - OMP_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - GOOGLE_CLIENT_ID=507995986306-qcdrhrrt3d71la4pkrf7lt1b2tvuusqm.apps.googleusercontent.com
      - GROQ_CLIENT_ID=your-groq-client-id
      - GROQ_CLIENT_SECRET=your-groq-client-secret
      - GROQ_API_KEY=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
      - NOMIC_APIC_KEY=nk-7Ad201NonNkEv_pYdRwb-EkNjf84mVLW205ihoE7RyU
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  flask_app2:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - OPENBLAS_NUM_THREADS=1
      - OMP_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GROQ_CLIENT_ID=your-groq-client-id
      - GROQ_CLIENT_SECRET=your-groq-client-secret
      - GROQ_API_KEY=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
      - NOMIC_APIC_KEY=nk-7Ad201NonNkEv_pYdRwb-EkNjf84mVLW205ihoE7RyU
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  flask_app3:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - OPENBLAS_NUM_THREADS=1
      - OMP_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GROQ_CLIENT_ID=your-groq-client-id
      - GROQ_CLIENT_SECRET=your-groq-client-secret
      - GROQ_API_KEY=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
      - NOMIC_APIC_KEY=nk-7Ad201NonNkEv_pYdRwb-EkNjf84mVLW205ihoE7RyU
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  flask_app4:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - OPENBLAS_NUM_THREADS=1
      - OMP_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GROQ_CLIENT_ID=your-groq-client-id
      - GROQ_CLIENT_SECRET=your-groq-client-secret
      - GROQ_API_KEY=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
      - NOMIC_APIC_KEY=nk-7Ad201NonNkEv_pYdRwb-EkNjf84mVLW205ihoE7RyU
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

networks:
  app_network:
    driver: bridge